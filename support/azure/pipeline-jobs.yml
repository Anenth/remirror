parameters:
  name: '' # defaults for any parameters that aren't specified
  vmImage: ''

jobs:
  - ${{ if eq(parameters.name, 'Linux') }}:
      - job: ${{ parameters.name }}Checks
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
          - template: pipeline-install.yml
          - bash: pnpm run lint
            displayName: 'check all lint rules'
          - bash: pnpm run typecheck
            displayName: 'typecheck code and tests'

  - ${{ if eq(parameters.name, 'Linux') }}:
      - job: ${{ parameters.name }}UnitTests
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
          - template: pipeline-install.yml

          # TODO turn tests back on soon.
          - bash: |
              pnpm run test || true
            displayName: 'run unit tests across project'

  - ${{ if eq(parameters.name, 'Linux') }}:
      - job: ${{ parameters.name }}SizeChecks
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
          - template: pipeline-install.yml
          - bash: pnpm run build
            displayName: 'build all project dependencies'
          - bash: pnpm run size
            displayName: 'check size limits'

  - ${{ if eq(parameters.name, 'Linux') }}:
      - job: ${{ parameters.name }}BuildUnitTests
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
          - template: pipeline-install.yml
          - bash: pnpm run build
            displayName: 'build all project dependencies'
          - bash: pnpm run test:build
            displayName: 'run unit tests against built code'
